  
  --------------------------------------------------------------------------
  CliEdit v1.0 - Made by XQTR of Another Droid BBS // andr01d.zapto.org:9999
  --------------------------------------------------------------------------
                        
                           Press ESC or F1 to go back
                        
       * Sections with an asterisk are not supported yet in this version.
                        
  ------------------
  Keyboard Shortcuts
  ------------------
  
      CTRL-Q : Exit
      CTRL-X : Enter Command Prompt
         ESC : Enter Command Prompt
      CTRL-O : Open/Load file
      CTRL-N : New file / Resets current window
      CTRL-S : Save document
      CTRL-F : Find
      CTRL-G : Find next
      CTRL-E : Clear to End Of Line (EOL)
      CTRL-D : Delete current line
      CTRL-W : Delete previous word
      CTRL-H : This help screen
      CTRL-T : Strip space in right side for current line
      CTRL-B : Toggle bookmark
      CTRL-R : Repeat last command
      CTRL-V : Paste from clipboard
      CTRL-C : Copy to clipboard
      CTRL-A : Toggle AutoIndent/Spaces
      CTRL-L : Jump to line
          F1 : Change to Window #1
          F2 : Change to Window #2
          F3 : Change to Window #3
          F4 : Change to Window #4
          F5 : Edit source code of this script
          F7 : Compile code in current window
          F8 : Insert/Choose spell correction or Code Hint (see below)
          F9 : Go to previous bookmark
         F10 : Go to next bookmark 
         INS : Toggle Insert/Overwrite mode
    CTRL-END : Go to end of document
   CTRL-HOME : Go to start of document   
   CTRL-LEFT : Move cursor to previous word
  CTRL-RIGHT : Move cursor to next word
  --------------------------------------------------------------------------
    
  -----------------------
  Command Prompt Commands
  -----------------------
  
  Pressing  ESC  or  CTRL-X, will invoke the command prompt. In there you can
  type  various supported commands to format the document and not only. While
  in the command prompt, press ESC to cancel and/or leave the command prompt.
  Below  is  a  list  with  all  supported commands and their paramaters. The
  commands are case insensitive.
  
  Except from the commands, if you enter a simple math expression, it will 
  calculate the result and insert it in the text. It's very useful, when 
  you want to calculate a color attribute like: 14+(4*16), yellow on red 
  background ;)
  --------------------------------------------------------------------------
  
  align <left|right|center> [lines] 
  al <left|right|center> [lines] 
    
    Aligns text for n line(s). If the number of lines is not given, it will 
    align the current line, only.
    
    Example: align center 10
    Aligns the text in center, from the current line and for the next 10 
    lines.
  --------------------------------------------------------------------------
  
  regex <search> <replace> [lines]
  
    This is a regular expression search and replace function. You can give 
    a regex pattern to find and replace with a given string, for n lines or 
    the whole document.
    
    If the parameters have space in them, put them inside double-quotes.
    
    Example: regex ^ # all
    It will insert a hash character in front of each line, for the whole 
    document. The ^ char. in regex means "in the beginning of the line"
    
    Example: regex "[oO]" "0" all
    Will replace all letters o and O with number 0, for a more elit theme 
    ;) Double-Quotes are also acceptable.
  --------------------------------------------------------------------------
    
  justify <lines> 
  just <lines> 
  
    Justifies text for n line(s). The number must be greater from 2. It 
    will justify the text from current line and for the n next lines. 
    Because, the resulted justified text could be less lines than the 
    original, the command will not erase the previous lines and it will 
    insert the new justified text in the current position.
    
    Example: justify 10
    It will justify and insert the text from the current line and for the 
    next 10 lines.
  --------------------------------------------------------------------------
    
  strip <left|right|center> [lines|all] 
  st <left|right|center> [lines|all] 
    
    Strips empty space from text, for n lines. If no number of lines is 
    given it will strip only the current line. If the ALL paramater is 
    given it will strip spaces from the whole document.
    
    Example: strip right all
    Will strip spaces from the right side of text, for the whole document.
  --------------------------------------------------------------------------
  
  format <lower|caps|upper> [lines]
  
    Change capitalization for n line(s) or current line if no number is 
    given. The format can be:
    
    caps or upper - All capital
    lower         - All lower case
    title         - Make the first letter of each word in capital
  --------------------------------------------------------------------------  
  
  insert <gpl|bsd|blog|script|html|python|pascal> 
  ins <gpl|bsd|blog|script|html|python|pascal> 
  
    Inserts text templates for various things, like a BSD license, a Python 
    script or even a text blog post.
    
    Example: insert html
    It will insert a HTML template
  --------------------------------------------------------------------------
  
  filetype <pascal|python|c|bas|delphi|text|bbcode|html|none|bash|mpy|mpl>
  fl <pascal|python|c|bas|delphi|text|bbcode|html|none|bash|mpy|mpl>
  
    Changes the file type for current document. This is used for the syntax 
    highlighting feature.
    
    Example: fl bash
    Will highlight the text, based on BASH syntax
  --------------------------------------------------------------------------
   
  ascii
  
    It will give you a prompt to enter an ASCII number, to insert the 
    specific ASCII character. If you type 254, it will enter the 254th 
    char. from the ASCII table.
  --------------------------------------------------------------------------
  
  width <num> 
  
    Sets document width to <num> cols.
  
    Example: width 80
    Will set the width to 80 character per line.
  --------------------------------------------------------------------------
  
  indent <rows> <cols> [+/-] 
    
    Adds or removes spaces for y rows and x cols after the current 
    position.
    
    Example: indent 3 2 +
    Will add 2 spaces in each line, for the current line and two more (3 in 
    total). If you give: indent 3 2 -, it will remove them
  --------------------------------------------------------------------------  
    
  repeat <cols> <char> 
  rep <cols> <char> 
  line <cols> <char> 
  
    Repeats the <char> for <cols> columns. Great to make ascii lines like 
    the ones in here :)
    
    line 80 -
    Repeats the character - for 80 times
  --------------------------------------------------------------------------
  
  open 
  load 
  
    Loads a text document to current window. After the command a prompt 
    will ask for the filename.
  --------------------------------------------------------------------------
  
  duplicate
  dupe
  
    Duplicates current window document, to the first available empty one.
  --------------------------------------------------------------------------
  
  crlf <win|dos|linux|unix>
  
    Changes the format of the line ending in file. When you open a file the 
    editor detects the line ending format and displays that in the status 
    bar. If you want to save the file in a different format, use this 
    command.
    
    Example: crlf dos
    Changes the line ending to \r\n
    
    Windows and DOS uses the same line ending format, the parameters DOS 
    and WIN will result in the same format. There are there just for 
    convenience.
  --------------------------------------------------------------------------  

  comment <num> 
  cm <num> : comment <num> lines
  
    Will add the comment symbol # from the current line and for <num> lines 
    next.
  --------------------------------------------------------------------------
  
  uncomment <num> 
  
    Removes the comment symbol # for the next <num> lines.
  --------------------------------------------------------------------------
  
  extract <num|all> : saves <num> lines to a file
  
    Extracts <num> lines from the current position to another file.
  --------------------------------------------------------------------------
  
  bash
  
    Lets you insert the output of a SHELL command in the current document.
  --------------------------------------------------------------------------
  
  delete <num|all> 
  del <num|all> 
  
    Deletes the next <num> lines, from current position
  --------------------------------------------------------------------------
  
  copy <num|all> 
  cp <num|all> 
  
    Copies to clipboard <num> lines or the whole document  
  --------------------------------------------------------------------------
  
  paste
  pt
  
    Pastes clipboard in current postion.
  --------------------------------------------------------------------------
  
  get <url|file> [codepage]
  
    Inserts a local file or a file from the internet. Default codepage is 
    UTF8. If you get a codepage error try another one, like ascii, cp437 
    etc.
    
    Example: get https://16colo.rs/pack/laz16/raw/FILE_ID.DIZ cp437
    Inserts the specified file from the internet.
  --------------------------------------------------------------------------
  
  spell <on|off> 
  
    Turns on/off spell suggestions. You can't insert a suggestion, only see 
    them.
  --------------------------------------------------------------------------
  
  code <on|off> 
  
    Turns on/off code hints, if available for the file type of the 
    document.
  --------------------------------------------------------------------------
  
  ansi <param>
  
    Inserts an ANSI Code for the given parameter. The paramater can be a 
    color or a special ansi code. Acceptable paramaters are:
    
    black, blue, green, cyan, red, magenta, brown, grey, darkgrey, lightblue,
    lightgreen, lightcyan, lightred, lightmagenta, yellow, white, reset, 
    clear, cls, goto, reverse and also integer values of colors.
    
    Example: ansi 14
    Will insert the equivelant ansi code for color yellow
  --------------------------------------------------------------------------
  
  mci <code> 
  
    Inserts a mystic bbs MCI code. Supported MCI codes are:
    
    00 to 23 for colors
    TI - current time
    US - height of terminal
    DA - current date
    UX - hostname
    UY - local ip
  --------------------------------------------------------------------------
  
  box <type> 
  
    Inserts a predefined ASCII box. <type> is an integer from 1.    
  --------------------------------------------------------------------------
  
  bookmark 
    
    Toggles, sets or unsets a bookmark in current line.
  --------------------------------------------------------------------------
  
  menuc [header] [option1] [option2] ..
  menul [header] [option1] [option2] ..
  
    Inserts a menu box with [header] and as many options/items you like. 
    menuc is for centered items and menul for left aligned items.
    
    Example: menuc PopUp item1 item2 item3
    Will insert the following ascii box.
    .----- PopUp -----.
    |      item1      |
    |      item2      |
    |      item3      |
    `-----------------'
  --------------------------------------------------------------------------
  
  saveas <type> *
  
    Saves/exports the document in a different format. Currently supported 
    formats are:
    
    gopher: saves the document as a gophermap file
    ansi  : saves the document as an ansi file, will ask for SAUCE data.
  --------------------------------------------------------------------------
  
  gopher <link|file|image|dir|url|bin|img|include|shell> 
  
    With this command you can insert gophermap items in a more easy way, as 
    the program asks you about the link, host, port etc. and then formats 
    the text to be inserted appropriate.
    
    link or url : enters a gopher link
    file        : inserts a local text file as a link
    image or img: inserts a local image file as a link
    bin         : inserts a local binary file as a link
    include     : inserts the text from a local text file, it's helpful to 
                  use for headers/footers in map files
    dir         : inserts a local directory as a link
    shell       : inserts a shell command item
    empty       : inserts an empty line item
    date        : inserts a date bbcode
    time        : inserts a time bbcode
    center      : inserts a center text bbcode
    right       : inserts a right bbcode
    h1          : inserts a h1/header bbcode
    h2          : inserts a h2/header bbcode
    hr          : inserts a hr/ruler bbcode
    
    Example: gopher image
    Will ask you about the path and filename of the image and then insert a 
    formatted string, that when the file is exported into a gophermap file, 
    it will have the correct format.
  --------------------------------------------------------------------------
  
  
  -----------------------------------
  Spell Correction and/or Hint insert
  -----------------------------------
  
  CliEd has the ability for spell correction while typing. To enable it you 
  give the command "SPELL ON" in the command prompt. When enabled, while 
  you type, the word you are in, is checked and if it's not found or has 
  errors, the program suggest the most possible ones, closest to the one 
  you are typing. To insert the proposed word, you press F8. If there is 
  only one proposed word, it's been inserted automatically, otherwise you 
  can choose from the words shown, by pressing again F8, until you select 
  the one you want. Press ENTER to confirm it or ESC to cancel the 
  operation.
  
  Same goes for code hints. You enable them by entering the command "CODE 
  ON" in the command prompt. If the typed word/command is similar with 
  others in the current filetype, it will give you a list with other 
  commands, pressing F8 lets you choose from. If there is only one command 
  that the word you are typing is part of, pressing F8 will complete the 
  word you are typing. If the word is a command found in the code hints, 
  pressing F8 will insert the whole code hint.
  
  You can only have one of them enabled, spell correction or code hints not 
  both!
  
  --------------------------------------------------------------------------
  
  ---------------------------------------  
  Color numbers for MCI and ANSI commands
  ---------------------------------------
  
  00 : Sets the current foreground to Black
  01 : Sets the current foreground to Dark Blue
  02 : Sets the current foreground to Dark Green
  03 : Sets the current foreground to Dark Cyan
  04 : Sets the current foreground to Dark Red
  05 : Sets the current foreground to Dark Magenta
  06 : Sets the current foreground to Brown
  07 : Sets the current foreground to Grey
  08 : Sets the current foreground to Dark Grey
  09 : Sets the current foreground to Light Blue
  10 : Sets the current foreground to Light Green
  11 : Sets the current foreground to Light Cyan
  12 : Sets the current foreground to Light Red
  13 : Sets the current foreground to Light Magenta
  14 : Sets the current foreground to Yellow
  15 : Sets the current foreground to White

  16 : Sets the current background to Black
  17 : Sets the current background to Blue
  18 : Sets the current background to Green
  19 : Sets the current background to Cyan
  20 : Sets the current background to Red
  21 : Sets the current background to Magenta
  22 : Sets the current background to Brown
  23 : Sets the current background to Grey
  --------------------------------------------------------------------------
  
  
  ----------
  Status Bar
  ----------
  
  Lets explain a bit the indications of the status bar.
  
 ^H:Help|^test.pas............|30 lines|     |WIN|#...|PAS|INS|AUTO| 80|B 24:1
         |  |                   |              |   |    |   |   |    |  | |
         |  |                   |    line ending   |    |   |   |    |  | |
         |  |                   |                  |    |   |   |    |  | |
         |  |                   |            windows    |   | indent |  | |
         |  |                   |                       |   |        |  | |
         |  |                   |                filetype   |        |  | |
         |  |                   |                           |        |  | |
         |  |                   |       insert/overwrite mode        |  | |
         |  |                   |                                    |  | |
         |  |                   total lines          width of document  | |
         |  |                                                           | |
         |  filename                       a bookmark is set in this line |
         |                                                                |
         file is changed and not saved                      cursor position
  ----------------------------------------------------------------------------


  -----------------
  About this editor
  -----------------
  
  Because  i  am  making  mods  for  the  BBS  scene  and  in  general i like
  ANSI/ASCII/Terminal  stuff,  i  had  the  need for a text editor like this.
  Plain and simple, but powerful for the things i do. RMDOK, "real men, do it
  on  keyboard"  they  say, so i wanted an editor that uses only the keyboard
  and  not  even  light bar menus. Every function is either set on a keyboard
  shortcut or in a command typed in the prompt. Some may like it, others will
  definitely wont. For sure it's not for everyone.
  
  I  made it with Python, not because i like Python or i think it's powerful.
  I  only did it, because Python is everywhere now days. In every PC and even
  smartphones.  So  with only a git command, you can have this editor in your
  system,  in  seconds. Also, because Python is a scripting language, you can
  have  the  source  code at your hands and change everything on the fly! You
  can  change colors, syntax highlighting scheme, commands, anything! You can
  even edit the script from inside the editor.
  
  Another thing you may notice, is that the whole editor is in one! file. Even
  the  help  text  is included inside the script. I wanted to be this way, for
  portability of the program. This way, you can get the program to any system,
  use  it  and  then  perhaps  delete it or throw it inside a script folder of
  yours, with no external files to be left in the system.
    
  The  editor  is  usable  also  under  Termux in Android phones. In case your
  screen is less than 70 columns, the status bar will show less information.
  ----------------------------------------------------------------------------
  
  
  ------------
  Installation
  ------------
  
  First download the editor from my github repo. Just give the command:
  
  git clone https://github.com/xqtr/clied
  
  Then, install some additional Python libraries, like SpellChecker and 
  Pyperclip with these commands:
  
  pip install spellchecker
  pip install pyperclip
  
  There  is a case that the spellchecker library doesn't work for you and when
  you  try to run the program, you will get an error about the indexer lib. In
  that  case  instead  of  installing  the  spellchecker  library, install the
  pyspellchecker library.
    
  Try  run  it, it should be ok. You could remove the spell suggestion and the
  use  of the clipboard, if you want to have a version of the editor with only
  default Python packages.
  ----------------------------------------------------------------------------


  ---------
  Functions
  ---------
  
  Let see what this editor can do:
  
  - Align left/center/right text
  - Justify text
  - Strip spaces from text
  - Insert ANSI codes
  - Insert upper ASCII codes
  - Format text (lower, upper, title)
  - Insert text templates for various formats
  - Insert strings like Date, Time, Colors, MCI codes and even Shell 
    commands output.
  - Support syntax highlight for many languages and also Mystic BBS, MPY and 
    MPS. You can also add your own and/or extend the ones used.
  - Spell suggestions and on the fly help for commands
  - Supports Code hints, fully customizable, included files for MPL/MPY
  - Apply functions to blocks of text
  - Extract block of text in external file and clipboard\
  - Insert text from external file or even from a downloaded file in the 
    Internet.
  - Insert predefined ASCII boxes
  - Create ASCII menus with a simple command
  - Can handle and navigate Bookmarks, for easy navigation in the text
  - You can write Gopher map files, with BBCODEs, more below...
  - Can make simple calculations and insert the result into the text, from 
    the command prompt.
  - Regular Expression replace strings
  - and more...  
  ----------------------------------------------------------------------------

  
  ------
  Gopher
  ------
  
  With  CliEd,  you  can  edit  and  create  Gophermap files! It uses a set of
  BBCodes  to  insert specific gopher items, like files, images, links etc. to
  make  gophermap  creation easier. If you learn and know the bbcodes, you can
  speed  up  the  process, but until you memorize them, you can use the gopher
  <item>, command to insert the bbcodes. You will find a list of the supported
  items in the section about the GOPHER command.
    
  When you finish editing the page/text, you enter the: SAVEAS GOPHER command,
  which  will  guide  you  to enter the needed information and at the end will
  export  the  gophermap  file,  as a gopher server wants it to be, with tabs,
  server address, port etc.
    
  You can then move the file to your gopher site and use it. If you don't know
  what Gopher is... google it! :) You can also download a copy of lynx browser
  and visit my gopher site like: lynx gopher://andr01d.zapto.org:7070
    
  If you like textmode, you will love Gopher!  
  ----------------------------------------------------------------------------

  
  -------
  Credits
  -------
  
  The core of this editor was found from a github project (link below). So 
  many thanks to the orginal author who open sourced his project.
  
  Kudos to the author of the justify function, very useful and rare to find 
  a working solution like this. You can get the function here:
  https://github.com/KonstantinosAng/CodeWars/blob/master/Python/
  %5B4%20kyu%5D%20Text%20align%20justify.py
  
